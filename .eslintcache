[{"/home/wilder/Documents/projets/Young_Tech/front/src/services/services.js":"1","/home/wilder/Documents/projets/Young_Tech/front/src/pages/AdminProfile.js":"2","/home/wilder/Documents/projets/Young_Tech/front/src/components/JobContent.js":"3","/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateAdminProfile.js":"4","/home/wilder/Documents/projets/Young_Tech/front/src/App.js":"5","/home/wilder/Documents/projets/Young_Tech/front/src/pages/ErrorPage.js":"6","/home/wilder/Documents/projets/Young_Tech/front/src/pages/SignIn.js":"7","/home/wilder/Documents/projets/Young_Tech/front/src/pages/UserProfile.js":"8","/home/wilder/Documents/projets/Young_Tech/front/src/pages/Application.js":"9","/home/wilder/Documents/projets/Young_Tech/front/src/components/Comment.js":"10","/home/wilder/Documents/projets/Young_Tech/front/src/components/FilterBar.js":"11","/home/wilder/Documents/projets/Young_Tech/front/src/components/Category.js":"12","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/FormikControl.js":"13","/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateCompagnyProfile.js":"14","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/DatePicker.js":"15","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/Textarea.js":"16","/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/TextError.js":"17"},{"size":2129,"mtime":1606225469266,"results":"18","hashOfConfig":"19"},{"size":5363,"mtime":1606224941291,"results":"20","hashOfConfig":"19"},{"size":4452,"mtime":1606226359674,"results":"21","hashOfConfig":"19"},{"size":4141,"mtime":1606241883148,"results":"22","hashOfConfig":"19"},{"size":3277,"mtime":1606222356812,"results":"23","hashOfConfig":"19"},{"size":475,"mtime":1606154689724,"results":"24","hashOfConfig":"19"},{"size":3876,"mtime":1606222356824,"results":"25","hashOfConfig":"19"},{"size":2575,"mtime":1606154689724,"results":"26","hashOfConfig":"19"},{"size":9789,"mtime":1606154689724,"results":"27","hashOfConfig":"19"},{"size":662,"mtime":1606154689724,"results":"28","hashOfConfig":"19"},{"size":2249,"mtime":1606154689724,"results":"29","hashOfConfig":"19"},{"size":213,"mtime":1606154689724,"results":"30","hashOfConfig":"19"},{"size":663,"mtime":1606154689724,"results":"31","hashOfConfig":"19"},{"size":4193,"mtime":1606154689724,"results":"32","hashOfConfig":"19"},{"size":851,"mtime":1606154689724,"results":"33","hashOfConfig":"19"},{"size":458,"mtime":1606154689724,"results":"34","hashOfConfig":"19"},{"size":186,"mtime":1606154689724,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"8tf779",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/wilder/Documents/projets/Young_Tech/front/src/services/services.js",["74"],"import React from 'react';\nimport axios from \"axios\";\nimport decode from \"jwt-decode\";\n\n\n\n// get user's details from BDD\nexport const getUserDetails = async () => {\n  const token = localStorage.getItem(\"token\");\n  const { userID } = decode(token);\n\n  const url = `http://localhost:4040/allpeople/userDetails/${userID}`;\n  const results = await axios({\n    method: \"GET\",\n    url: url,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-access-token\": token,\n    },\n  });\n  const details = results.data[0];\n  return details;\n};\n\n// Check if user is logged\nexport const isLogged = () => {\n\n  // 1. stock token from localstorage\n  const token = localStorage.getItem(\"token\");\n  // 2. verify if there is a token\n  if (!token) {\n    return false;\n  }\n  // 3. verify if the token has been expired\n  try {\n    const { exp } = decode(token);\n    if (exp < new Date().getTime() / 1000) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  const { userType } = decode(token);\n  return userType;\n};\n\n// store user's details\nexport const userDetails = () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const {\n        userID,\n        userType,\n        email,\n        first_name,\n        last_name,\n        logo,\n        phone,\n        description_compagny,\n        compagnyID,\n      } = decode(token);\n      return {\n        userType,\n        userID,\n        email,\n        first_name,\n        last_name,\n        phone,\n        description_compagny,\n        compagnyID,\n        logo,\n        isLogged: true,\n      };\n    }\n  } catch (err) {\n    console.log(\"No user connected: \" + err);\n    const isLogged = false;\n    return isLogged;\n  }\n};\n\n// Redirect user towards his profile page once log in\nexport const goToUserProfilePage = (userType, userID) => {\n  switch (userType) {\n    case \"admin\":\n      return window.location.replace(`/admin/${userID}`);\n    case \"user\":\n      return window.location.replace(`/user/${userID}`);\n    case \"compagny\":\n      return window.location.replace(`/compagny/${userID}`);\n    default:\n      return window.location.replace(\"/\");\n  }\n};",["75","76"],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/AdminProfile.js",["77"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n// components\nimport Category from \"../components/Category\";\nimport DescriptionJob from \"../components/DescriptionJob\";\nimport Hero from \"../components/Hero\";\nimport UpdateAdminProfile from \"../components/UpdateProfileForm/UpdateAdminProfile\";\nimport DeleteAccount from \"../components/DeleteAccount\";\n\nimport { getUserDetails } from \"../services/services\";\nimport decode from \"jwt-decode\";\nModal.setAppElement(\"#root\");\n\nconst AdminProfile = () => {\n  //get the user's id form localstorage\n  const token = localStorage.getItem(\"token\");\n  const { userID } = decode(token);\n\n  //get the list of :\n  const [users, setUsers] = useState([]);\n  const [offers, setOffers] = useState([]);\n  const [compagnies, setCompagnies] = useState([]);\n  const [myDetails, setMyDetails] = useState([]);\n\n  //handle modal opening\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\n\n  //get what user's type and user's id to delete\n  const [userToDelete, setUserToDelete] = useState(\"\");\n\n  //stock results from back\n  const [response, setResponse] = useState([]);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      const url = \"http://localhost:4040/admin/users\";\n      const result = await axios.get(url);\n      setUsers(result.data);\n    };\n    getUsers();\n\n    const getOffers = async () => {\n      const url = \"http://localhost:4040/allpeople/getoffers\";\n      const result = await axios.get(url);\n      setOffers(result.data);\n    };\n    getOffers();\n\n    const getCompagnies = async () => {\n      const url = \"http://localhost:4040/admin/compagnies\";\n      const result = await axios.get(url);\n      setCompagnies(result.data);\n    };\n    getCompagnies();\n\n    //get user's details form \"getUserDetails\" function (services component)\n    async function fetchData() {\n      const userDetails = await getUserDetails();\n      setMyDetails(userDetails);\n    }\n    fetchData();\n  }, [response]);\n\n  //admin's logo\n  const logo = myDetails.logo;\n\n  // handle opening modal\n  const handleModale = (userID) => {\n    setUserToDelete(userID);\n    setmodalIsOpen(true);\n  };\n\n  // handle deletation of user/compagny depending on is type\n  const handleDelete = async () => {\n    setmodalIsOpen(false);\n    const url = `http://localhost:4040/allpeople/deleteUserAccount/${userToDelete}`;\n    await axios({\n      method: \"DELETE\",\n      url: url,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token,\n      },\n    })\n      .then((res) => setResponse(res.data))\n      .catch((error) => {\n        console.log(\"error:\", error);\n      });\n  };\n\n  return (\n    <>\n      <Hero logo={logo} nameUser={\"Yo les admins\"} />\n      <div className=\"container\">\n        <div className=\"inner--profilePage\">\n          <div className=\"user\">\n            <Category name={\"Les utilisateurs\"} />\n            <div className=\"list\">\n              {users.map((user) => (\n                <div key={user.userID} className=\"list__user\">\n                  <p>\n                    {user.first_name} {user.last_name}\n                  </p>\n                  <span\n                    onClick={() => handleModale(user.userID)}\n                    role=\"img\"\n                    aria-label={\"supprimer\"}\n                  >\n                    &#x274C;\n                  </span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"ad\">\n            <Category name={\"Les compagnies\"} />\n            <div className=\"list list--show\">\n              {compagnies.map((compagny) => (\n                <ul key={compagny.compagnyID} className=\"list__compagny\">\n                  <li>{compagny.compagny_name}</li>\n                  <span\n                    role=\"img\"\n                    aria-label={\"supprimer\"}\n                    onClick={() => handleModale(compagny.compagnyID)}\n                  >\n                    &#x274C;\n                  </span>\n                </ul>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"compagny\">\n            <Category name={\"Les offers\"} />\n            <div className=\"list list--show\">\n              {offers.map((offer) => (\n                <DescriptionJob\n                  key={offer.offerID}\n                  idJob={offer.offerID}\n                  logo={offer.logo}\n                  wage={offer.wage}\n                  contract={offer.contract}\n                  job_name={offer.job_name}\n                  compagny_name={offer.compagny_name}\n                  location={offer.location}\n                  toggle={true}\n                  userType={\"admin\"}\n                />\n              ))}\n            </div>\n          </div>\n\n          <div className=\"mydetails\">\n            <Category name={\"Mon profil\"} />\n            <UpdateAdminProfile userDetails={myDetails} />\n          </div>\n          <DeleteAccount />\n          <Modal\n            isOpen={modalIsOpen}\n            onRequestClose={() => setmodalIsOpen(false)}\n            shouldCloseOnOverLayClick={false}\n          >\n            <div>\n              <h2>confirmer la suppression ?</h2>\n              <button onClick={() => handleDelete()}>Oui</button>\n            </div>\n          </Modal>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminProfile;\n","/home/wilder/Documents/projets/Young_Tech/front/src/components/JobContent.js",["78","79","80"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport decode from \"jwt-decode\";\n//components\nimport Button from \"../components/Button\";\n\nconst JobContent = (props) => {\n  const {idJob, compagny_id, description_compagny, description_position, prerequisite, userType} = props\n\n  // get user'id from localstorage\n  const token = localStorage.getItem(\"token\")\n  const {userID} = decode(token)\n\n  //handle the modal and the response from the back when deleting something\n  const [modalIsOpen, setmodalIsOpen] = useState(false);\n  const [response, setResponse] = useState([]);\n\n  //handle opening modale\n  const handleModale = () => {\n    setmodalIsOpen(true);\n  };\n\n  //close the modal and delete the offer\n  const handleDeleteOffer = async () => {\n    setmodalIsOpen(false);\n    switch (userType) {\n      case \"compagny\":\n        const urlCompagny = `http://localhost:4040/compagny/deleteOffer/${idJob}`;\n        await axios({\n          method: \"DELETE\",\n          url: urlCompagny,\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-access-token\": token,\n          },\n        })\n          .then((res) => setResponse(res.data))\n          .catch((error) => {\n            console.log(\"error:\", error);\n          });\n          case \"admin\":\n            const urlAdmin = `http://localhost:4040/compagny/deleteOffer/${idJob}`;\n            await axios({\n              method: \"DELETE\",\n              url: urlAdmin,\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-access-token\": token,\n              },\n            })\n              .then((res) => setResponse(res.data))\n              .catch((error) => {\n                console.log(\"error:\", error);\n              });\n      case \"user\":\n        \n        const urlUser = `http://localhost:4040/users/deleteApplication/${userID}/${idJob}`;\n        axios.delete(urlUser).then((res) => setResponse(res.data));\n        break;\n      default:\n        break;\n    }\n    setInterval(function() {\n      window.location.reload();\n    }, 300);\n    //re-render force\n  };\n\n  return (\n    <>\n      <div className=\"jobPage__content\">\n        <div className=\"jobPage__description\">\n          <h6>Description de l'entreprise</h6>\n          <p>{description_compagny}</p>\n          <h6>Description du poste</h6>\n          <p>{description_position}</p>\n        </div>\n        <div className=\"jobPage__prerequisite\">\n          <h6>Pré-requis</h6>\n          <p>{prerequisite}</p>\n        </div>\n        <div className=\"side-bar\">\n          <div className=\"widget\">\n            <div className=\"inner\">\n              {/* element available from homepage */}\n              {userType ? null : (\n                <Button className={\"btn btn--grey\"} value={\"Sauvegarder\"} />\n              )}\n              {userType ? null : (\n                <Link to={`/apply/${idJob}/${compagny_id}`} className=\"btn\">\n                  Postuler\n                </Link>\n              )}\n\n              {/* element available from compagnyProfile and/or adminProfile */}\n              {userType === \"compagny\" || userType === \"admin\" ? (\n                <Link\n                  to={{\n                    pathname: `/updatead/${idJob}`,\n                    state: { compagny_id: true }\n                  }}\n                  className=\"btn btn--grey\"\n                >\n                  Editer\n                </Link>\n              ) : null}\n              {userType === \"compagny\" || userType === \"admin\" ? (\n                <Button\n                  action={handleModale}\n                  value={\"Supprimer\"}\n                  className=\"btn\"\n                />\n              ) : null}\n\n              {/* element available for user only */}\n              {userType === \"user\"  ? (\n                <Button\n                  value={\"Retirer sa candidature\"}\n                  className=\"btn\"\n                  action={handleModale}\n                />\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setmodalIsOpen(false)}\n        shouldCloseOnOverLayClick={false}\n      >\n        <div>\n          <h2>confirmer la suppression ?</h2>\n          <button onClick={() => handleDeleteOffer()}>Oui</button>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default JobContent;\n","/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateAdminProfile.js",["81"],"/home/wilder/Documents/projets/Young_Tech/front/src/App.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/ErrorPage.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/SignIn.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/UserProfile.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/pages/Application.js",["82"],"/home/wilder/Documents/projets/Young_Tech/front/src/components/Comment.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/FilterBar.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/Category.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/FormikControl.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/UpdateProfileForm/UpdateCompagnyProfile.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/DatePicker.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/Textarea.js",[],"/home/wilder/Documents/projets/Young_Tech/front/src/components/formik/TextError.js",[],{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":13},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"83","severity":1,"message":"91","line":18,"column":11,"nodeType":"85","messageId":"86","endLine":18,"endColumn":17},{"ruleId":"83","severity":1,"message":"92","line":18,"column":10,"nodeType":"85","messageId":"86","endLine":18,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":43,"column":11,"nodeType":"95","messageId":"96","endLine":56,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":57,"column":7,"nodeType":"95","messageId":"96","endLine":61,"endColumn":15},{"ruleId":"83","severity":1,"message":"92","line":16,"column":10,"nodeType":"85","messageId":"86","endLine":16,"endColumn":18},{"ruleId":"83","severity":1,"message":"97","line":17,"column":10,"nodeType":"85","messageId":"86","endLine":17,"endColumn":19},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'userID' is assigned a value but never used.","'response' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'myDetails' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]